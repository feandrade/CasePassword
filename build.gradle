buildscript {
    ext.kotlin_version = '1.3.31'

    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.1.5.RELEASE"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.31'
    id "org.springframework.boot" version "2.1.5.RELEASE"
    id "org.sonarqube" version "2.7"
    id 'jacoco'
}

repositories {
    mavenCentral()
    jcenter()
    mavenLocal()
}

bootJar {
    enabled = false
    version = '0.0.1-SNAPSHOT'
}

subprojects {
    group "com.clean.arquitecture"
    version "0.0.1-SNAPSHOT"

    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()

    }

    apply plugin: 'kotlin'
    apply plugin: "kotlin-allopen"
    apply plugin: "jacoco"

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    dependencies {
        implementation("org.springframework.boot:spring-boot-starter-web:${spring_version}")
        implementation("org.springframework.boot:spring-boot-starter-test:${spring_version}")

        implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.9"
        implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.31"
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.31"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0-M2"



        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
        testImplementation "org.hamcrest:hamcrest-library:2.1"
        testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
        testImplementation "org.springframework:spring-mock:2.0.8"
        testCompile "com.willowtreeapps.assertk:assertk:0.21"
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }

    allOpen {
        annotation("org.springframework.stereotype.Component")
        annotation("org.springframework.stereotype.Service")
        annotation("org.springframework.stereotype.Repository")
        annotation("org.springframework.context.annotation.Configuration")
        annotation("org.springframework.context.annotation.ComponentScan")
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    test {
        useJUnitPlatform()
    }
}